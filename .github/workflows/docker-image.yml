name: Docker Image CD

on:
  push:
    branches: [ "cd/modified-deploy-step" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Docker Hub 로그인 (Docker Hub 사용자명과 비밀번호는 GitHub Secrets에 저장)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 서버 이미지 빌드 및 태그 지정
      - name: Build and tag Docker image
        run: |
          docker build -t inear-server:${{ github.sha }} ./server
          docker tag inear-server:${{ github.sha }} inear-server:latest

      # 클라이언트 이미지 빌드 및 태그 지정
      - name: Build and tag client image
        run: |
          docker build -t inear-client:${{ github.sha }} ./client
          docker tag inear-client:${{ github.sha }} inear-client:latest

      # Docker Compose로 전체 애플리케이션 빌드 및 실행 (테스트용)
      - name: Run Docker Compose for testing (optional)
        run: |
          docker-compose up --build -d

      # 서버 이미지 푸시 (Docker Hub 또는 다른 레지스트리)
      - name: Push server image to Docker Hub (optional)
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/inear-server:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/inear-server:latest

      # 클라이언트 이미지 푸시 (Docker Hub 또는 다른 레지스트리)
      - name: Push client image to Docker Hub (optional)
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/inear-client:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/inear-client:latest

      # SSH 접속을 위한 SSH 키 설정
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 원격 서버의 SSH 호스트 키를 저장하여 SSH 연결 시 신뢰성을 확인하는 과정
      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # 서버에서 파일을 최신화 하고, 배포 스크립트를 통해 실제 배포 진행
      - name: Deploy with Docker Compose on server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} " \
            cd /${{ secrets.SSH_USER }}/web18-inear-test && \
            docker pull ${{ secrets.DOCKER_USERNAME }}/inear-server:latest && \
            docker pull ${{ secrets.DOCKER_USERNAME }}/inear-client:latest && \
            ./deploy.sh
          "
