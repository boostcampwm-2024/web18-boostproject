networks:
  webapp:
    name: webapp

services:
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: server
    volumes:
      - ./server:/app/server
      - ./tsconfig.json:/app/tsconfig.json
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./.yarnrc.yml:/app/.yarnrc.yml
      - ./.yarn:/app/.yarn
    command:
      - yarn
      - --cwd
      - /app/server
      - dev
    environment:
      - NODE_ENV=development
    networks:
      - webapp
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://server:3000/api/health || exit 1"]
      interval: 7s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: client
    volumes:
      - ./client:/app/client
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - ./.yarnrc.yml:/app/.yarnrc.yml
      - ./.yarn:/app/.yarn
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - webapp
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - '80:80'
    depends_on:
      - server
      - client
    networks:
      - webapp
    restart: unless-stopped
